# Generated by Django 3.2.7 on 2021-12-02 09:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GrannyFlat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('granny_foundation_description', models.CharField(choices=[('None', 'None'), ('Piers', 'Piers'), ('Pole', 'Pole'), ('Slab', 'Slab')], default='Piers', max_length=100, verbose_name='Foundation')),
                ('granny_foundation_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=100, verbose_name='Condition')),
                ('granny_foundation_comments', models.CharField(blank=True, max_length=300, null=True, verbose_name='Comments')),
                ('granny_walls_description', models.CharField(choices=[('None', 'None'), ('Brick', 'Brick'), ('Brick-Glass', 'Brick-Glass'), ('Fibre Cement', 'Fibre Cement'), ('Gyprock', 'Gyprock'), ('Picture Rails', 'Picture Rails'), ('Render', 'Render'), ('Tiles', 'Tiles'), ('Timber', 'Timber'), ('Wall Paper', 'Wall Paper')], default='Brick', max_length=100, verbose_name='Description')),
                ('granny_walls_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=100, verbose_name='Condition')),
                ('granny_walls_comments', models.CharField(blank=True, max_length=300, null=True, verbose_name='Comments')),
                ('granny_roof_description', models.CharField(choices=[('None', 'None'), ('Colourbond', 'Colourbond'), ('Cliplock', 'Cliplock'), ('Concrete Tile', 'Concrete Tile'), ('Decromastic', 'Decromastic'), ('Other', 'Other')], default='Colourbond', max_length=100, verbose_name='Description')),
                ('granny_roof_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=100, verbose_name='Condition')),
                ('granny_roof_comments', models.CharField(blank=True, max_length=300, null=True, verbose_name='Comments')),
                ('building_area', models.IntegerField(blank=True, null=True, verbose_name='Building Area')),
                ('carport_area', models.IntegerField(blank=True, null=True, verbose_name='Carport Area')),
                ('garage_area', models.IntegerField(blank=True, null=True, verbose_name='Garage Area')),
                ('is_granny_flat', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=20, verbose_name='Is There A Granny Flat')),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('off-market', 'Off Market'), ('on-market', 'On Market'), ('other', 'Other')], max_length=20, verbose_name='Category')),
                ('note', models.CharField(blank=True, max_length=255, verbose_name='Note if other')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('active', 'Active'), ('purchased', 'Purchased'), ('listed', 'Listed'), ('sold', 'Sold'), ('not_proceeding', 'Not Proceeding')], max_length=100, verbose_name='Status')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_type', models.CharField(choices=[('Residential', 'Residential'), ('Strata', 'Strata')], default='Residential', max_length=30, verbose_name='Property Type')),
                ('beds', models.IntegerField(default=0, verbose_name='Beds')),
                ('bath', models.IntegerField(default=0, verbose_name='Bath')),
                ('land', models.IntegerField(default=0, verbose_name='Land')),
                ('garage', models.IntegerField(default=0, verbose_name='Garage')),
                ('po_box', models.CharField(blank=True, max_length=100, null=True, verbose_name='PO Box')),
                ('postal_suburb', models.CharField(blank=True, max_length=100, null=True, verbose_name='Suburb')),
                ('postal_state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State')),
                ('postal_post_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Post Code')),
                ('unit', models.CharField(blank=True, max_length=100, null=True, verbose_name='Unit')),
                ('number', models.IntegerField(blank=True, null=True, verbose_name='Number')),
                ('street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Street')),
                ('suburb', models.CharField(blank=True, max_length=100, null=True, verbose_name='Suburb')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State')),
                ('post_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Post Code')),
                ('original_list_date', models.DateField(blank=True, null=True, verbose_name='Original List Date')),
                ('todays_date', models.DateField(blank=True, null=True, verbose_name="Today's Date")),
                ('on_or_off_market', models.CharField(choices=[('ON', 'ON'), ('OFF', 'OFF')], default='ON', max_length=3, verbose_name='On Or Off Market')),
                ('start_list_price', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,-]*$')], verbose_name='Start List Price')),
                ('end_list_price', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,-]*$')], verbose_name='End List Price')),
                ('start_list_date', models.DateField(blank=True, null=True, verbose_name='Start List Date')),
                ('end_list_date', models.DateField(blank=True, null=True, verbose_name='End List Date')),
                ('difference', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,-]*$')], verbose_name='Difference')),
                ('dom', models.IntegerField(blank=True, null=True, verbose_name='Days On Market')),
                ('lead', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='property', to='leads.lead')),
            ],
        ),
        migrations.CreateModel(
            name='Zoning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zoning', models.CharField(blank=True, max_length=100, null=True, verbose_name='Zoning')),
                ('_property', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='zoning', to='leads.property')),
            ],
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_caveat', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name Of Caveat')),
                ('value_of_caveat', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,]*$')], verbose_name='Value')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='leads.lead')),
            ],
        ),
        migrations.CreateModel(
            name='StreetAppeal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(choices=[('Poor', 'Poor'), ('Average', 'Average'), ('Above Average', 'Above Average'), ('Excellent', 'Excellent')], default='Excellent', max_length=100, verbose_name='Description')),
                ('landscaping', models.CharField(choices=[('Poor', 'Poor'), ('Average', 'Average'), ('Above Average', 'Above Average'), ('Excellent', 'Excellent')], default='Excellent', max_length=100, verbose_name='Landscaping')),
                ('street_appeal_comments', models.CharField(blank=True, max_length=300, null=True, verbose_name='Comments')),
                ('_property', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='street_appeal', to='leads.property')),
            ],
        ),
        migrations.CreateModel(
            name='Shape',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shape', models.CharField(choices=[('Regular', 'Regular'), ('Irregular', 'Irregular'), ('Corner', 'Corner')], default='Regular', max_length=100, verbose_name='Shape')),
                ('contour', models.CharField(choices=[('Cross Fall', 'Cross Fall'), ('Rise', 'Rise'), ('Fall', 'Fall'), ('Level', 'Level')], default='Cross Fall', max_length=100, verbose_name='Contour')),
                ('degree', models.CharField(choices=[('Gentle', 'Gentle'), ('Moderate', 'Moderate'), ('Steep', 'Steep')], default='Gentle', max_length=100, verbose_name='Degree')),
                ('_property', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shape', to='leads.property')),
            ],
        ),
        migrations.CreateModel(
            name='PropertyOwner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Last Name')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Title')),
                ('salutation', models.CharField(blank=True, max_length=100, null=True, verbose_name='Salutation')),
                ('mobile', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Mobile number must be entered in the format: 'XXXXXXXXXX' or '(XX) XXXXXXXXXX'. Up to 12 digits allowed.", regex='^[(\\d) ]{10,15}$')])),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('date_of_notice', models.DateField(blank=True, null=True, verbose_name='Date Of Notice')),
                ('date_of_death', models.DateField(blank=True, null=True, verbose_name='Date Of Death')),
                ('deceased', models.CharField(blank=True, max_length=100, null=True, verbose_name='Deceased')),
                ('is_company', models.BooleanField(default=False)),
                ('company_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Company Name')),
                ('abn_or_acn', models.CharField(choices=[('ABN', 'ABN'), ('ACN', 'ACN'), ('Not Present', 'Not Present')], default='ABN', max_length=15, verbose_name='ABN/ACN')),
                ('abn_or_acn_number', models.IntegerField(blank=True, null=True, verbose_name='ABN/ACN Number')),
                ('po_box', models.CharField(blank=True, max_length=100, null=True, verbose_name='PO Box')),
                ('postal_suburb', models.CharField(blank=True, max_length=100, null=True, verbose_name='Suburb')),
                ('postal_state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State')),
                ('postal_post_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Post Code')),
                ('unit', models.CharField(blank=True, max_length=100, null=True, verbose_name='Unit')),
                ('number', models.IntegerField(blank=True, null=True, verbose_name='Number')),
                ('street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Street')),
                ('suburb', models.CharField(blank=True, max_length=100, null=True, verbose_name='Suburb')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State')),
                ('post_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Post Code')),
                ('_property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='property_owner', to='leads.property')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalLoan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('amount', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,]*$')], verbose_name='Amount')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='leads.lead')),
            ],
        ),
        migrations.CreateModel(
            name='Parking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Location Name')),
                ('carport', models.CharField(choices=[('None', 'None'), ('Single', 'Single'), ('Double', 'Double'), ('Tandem', 'Tandem')], default='Single', max_length=100, verbose_name='Carport')),
                ('carport_area', models.IntegerField(blank=True, null=True, verbose_name='Carport Area')),
                ('garage', models.CharField(choices=[('None', 'None'), ('Single', 'Single'), ('Double', 'Double'), ('Tandem', 'Tandem')], default='Single', max_length=100, verbose_name='Garage')),
                ('garage_area', models.IntegerField(blank=True, null=True, verbose_name='Garage Area')),
                ('other', models.CharField(choices=[('None', 'None'), ('Off Street', 'Off Street'), ('On Street', 'On Street'), ('Underground', 'Underground'), ('Other', 'Other')], default='Off Street', max_length=100, verbose_name='Other')),
                ('parking_comments', models.CharField(blank=True, max_length=300, null=True, verbose_name='Comments')),
                ('_property', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parking', to='leads.property')),
            ],
        ),
        migrations.CreateModel(
            name='Lounge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Location Name')),
                ('floors', models.CharField(choices=[('None', 'None'), ('Carpet', 'Carpet'), ('Carpet-Pattern', 'Carpet-Pattern'), ('Carpet-Plain', 'Carpet-Plain'), ('Concrete', 'Concrete'), ('Cork', 'Cork'), ('Plastic', 'Plastic'), ('Plastic-Lino', 'Plastic-Lino'), ('Plastic-Vinyl', 'Plastic-Vinyl'), ('Stone', 'Stone'), ('Stone-Granite', 'Stone-Granite'), ('Stone-Limestone', 'Stone-Limestone'), ('Stone-Marble', 'Stone-Marble'), ('Stone-Sandstone', 'Stone-Sandstone'), ('Stone-Slate', 'Stone-Slate'), ('Stone-Travertine', 'Stone-Travertine'), ('Stone-Terrazzo', 'Stone-Terrazzo'), ('Tile', 'Tile'), ('Tile-Ceramic', 'Tile-Ceramic'), ('Tile-Mosaic', 'Tile-Mosaic'), ('Tile-Porcelain', 'Tile-Porcelain'), ('Tile-Wood', 'Tile-Wood'), ('Timber', 'Timber'), ('Timber-Floating Floor', 'Timber-Floating Floor'), ('Timber-Hardwood', 'Timber-Hardwood'), ('Timber-Polished', 'Timber-Polished')], default='Carpet', max_length=50, verbose_name='Floors')),
                ('floors_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=50, verbose_name='Condition')),
                ('floors_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('ceiling', models.CharField(choices=[('None', 'None'), ('Gyprock', 'Gyprock'), ('Fibre Cement', 'Fibre Cement'), ('Timber', 'Timber')], default='Gyprock', max_length=50, verbose_name='Ceiling')),
                ('ceiling_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=50, verbose_name='Condition')),
                ('ceiling_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('walls', models.CharField(choices=[('None', 'None'), ('Brick', 'Brick'), ('Brick-Glass', 'Brick-Glass'), ('Fibre Cement', 'Fibre Cement'), ('Gyprock', 'Gyprock'), ('Picture Rails', 'Picture Rails'), ('Render', 'Render'), ('Tiles', 'Tiles'), ('Timber', 'Timber'), ('Wall Paper', 'Wall Paper')], default='Brick', max_length=50, verbose_name='Walls')),
                ('walls_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=50, verbose_name='Condition')),
                ('walls_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('light_fittings', models.CharField(choices=[('Halogens', 'Halogens'), ('Track', 'Track'), ('Down Light', 'Down Light'), ('Fluro', 'Fluro'), ('LED', 'LED')], default='Halogens', max_length=50, verbose_name='Light Fittings')),
                ('light_fittings_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('room_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('room_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('room_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('window_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('window_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('window_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('balcony_present', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=20, verbose_name='Balcony Present')),
                ('balcony_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('balcony_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('balcony_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('sliding_door_present', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=20, verbose_name='Sliding Door Present')),
                ('sliding_door_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('sliding_door_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('sliding_door_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('curtains_or_blinds', models.CharField(choices=[('None', 'None'), ('Blinds', 'Blinds'), ('Blinds-Aluminium', 'Blinds-Aluminium'), ('Blinds-Honeycomb', 'Blinds-Honeycomb'), ('Blinds-Mini', 'Blinds-Mini'), ('Blinds-Panel', 'Blinds-Panel'), ('Blinds-Pleated', 'Blinds-Pleated'), ('Blinds-Roller', 'Blinds-Roller'), ('Blinds-Sheer', 'Blinds-Sheer'), ('Blinds-Venetian', 'Blinds-Venetian'), ('Blinds-Vertical', 'Blinds-Vertical'), ('Curtains', 'Curtains'), ('Curtains-Box Pleated', 'Curtains-Box Pleated'), ('Curtains-Eyelet', 'Curtains-Eyelet'), ('Curtains-Goblet', 'Curtains-Goblet'), ('Curtains-Tailored Pleat', 'Curtains-Tailored Pleat')], default='Blinds', max_length=50, verbose_name='Curtains/Blinds')),
                ('curtains_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('air_conditioning_ducted', models.BooleanField(default=False, verbose_name='Air Conditioning-Ducted')),
                ('air_conditioning_wall_mounted', models.BooleanField(default=False, verbose_name='Air Conditioning-Wall Mounted')),
                ('ceiling_fan', models.BooleanField(default=False, verbose_name='Ceiling Fan')),
                ('ducted_vacuum', models.BooleanField(default=False, verbose_name='Ducted Vacuum')),
                ('exposed_timber_beams', models.BooleanField(default=False, verbose_name='Exposed Timber Beams')),
                ('fire_place_combustion', models.BooleanField(default=False, verbose_name='Fire Place - Combustion')),
                ('fire_place_gas', models.BooleanField(default=False, verbose_name='Fire Place - Gas')),
                ('intercom_system', models.BooleanField(default=False, verbose_name='Intercom System')),
                ('sky_light', models.BooleanField(default=False, verbose_name='Sky Light')),
                ('tv_outlet', models.BooleanField(default=False, verbose_name='TV Outlet')),
                ('wet_bar', models.BooleanField(default=False, verbose_name='Wet Bar')),
                ('_property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='leads.property')),
                ('granny_flat', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lounge', to='leads.grannyflat')),
            ],
        ),
        migrations.CreateModel(
            name='Laundry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Location Name')),
                ('tub', models.CharField(choices=[('None', 'None'), ('Acrylic', 'Acrylic'), ('Stainless Steel', 'Stainless Steel')], default='Acrylic', max_length=50, verbose_name='Tub')),
                ('bench', models.CharField(choices=[('None', 'None'), ('Laminated', 'Laminated'), ('Timber', 'Timber')], default='Laminated', max_length=50, verbose_name='Bench')),
                ('laundry_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('_property', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='laundry', to='leads.property')),
                ('granny_flat', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='laundry', to='leads.grannyflat')),
            ],
        ),
        migrations.CreateModel(
            name='LandDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Acreage', 'Acreage'), ('Apartment', 'Apartment'), ('House', 'House'), ('Rural', 'Rural'), ('Townhouse', 'Townhouse'), ('Vacant Land', 'Vacant Land'), ('Villa', 'Villa')], default='Acreage', max_length=20, verbose_name='Property Type')),
                ('lot', models.CharField(blank=True, max_length=100, null=True, verbose_name='Lot')),
                ('dp_or_sp', models.CharField(max_length=10, verbose_name='DP/SP Number')),
                ('section', models.CharField(blank=True, max_length=100, null=True, verbose_name='Section')),
                ('_property', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='land_details', to='leads.property')),
            ],
        ),
        migrations.CreateModel(
            name='Kitchen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Location Name')),
                ('benchtops', models.CharField(choices=[('None', 'None'), ('Ceaser Stone', 'Ceaser Stone'), ('Concrete', 'Concrete'), ('Granite', 'Granite'), ('Laminated', 'Laminated'), ('Quartz', 'Quartz'), ('Stainless Steel', 'Stainless Steel'), ('Stone', 'Stone'), ('Timber', 'Timber')], default='Ceaser Stone', max_length=50, verbose_name='Benchtops')),
                ('cooktop', models.CharField(choices=[('None', 'None'), ('Electric', 'Electric'), ('Gas', 'Gas')], default='Electric', max_length=50, verbose_name='Cooktop')),
                ('cooktop_ventilation', models.CharField(choices=[('None', 'None'), ('Exhaust Fan', 'Exhaust Fan'), ('Rangehood', 'Rangehood')], default='Exhaust Fan', max_length=50, verbose_name='Cooktop Ventilation')),
                ('cupboards', models.CharField(choices=[('None', 'None'), ('Laminated', 'Laminated'), ('Timber', 'Timber'), ('Polyurethane', 'Polyurethane')], default='Laminated', max_length=50, verbose_name='Cupboards')),
                ('kitchen_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('kitchen_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('kitchen_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('oven_or_stove', models.CharField(choices=[('None', 'None'), ('Electric Upright', 'Electric Upright'), ('Gas Upright', 'Gas Upright'), ('Under Bench', 'Under Bench')], default='Built In Micro', max_length=50, verbose_name='Oven Or Stove')),
                ('sink', models.CharField(choices=[('None', 'None'), ('Single', 'Single'), ('1.25', '1.25'), ('1.50', '1.50'), ('Double', 'Double')], default='Single', max_length=50, verbose_name='Sink')),
                ('sink_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('splashback', models.CharField(choices=[('None', 'None'), ('Ceramic Tile', 'Ceramic Tile'), ('Glass', 'Glass'), ('Glass Mosaic', 'Glass Mosaic'), ('Stainless Steel', 'Stainless Steel'), ('Stone', 'Stone'), ('Other', 'Other')], default='Ceramic Tile', max_length=50, verbose_name='Splashback')),
                ('pantry', models.CharField(choices=[('None', 'None'), ('Built In', 'Built In'), ('Walk In', 'Walk In')], default='Built In', max_length=50, verbose_name='Pantry')),
                ('insinkerator', models.BooleanField(default=False, verbose_name='Insinkerator')),
                ('built_in_micro', models.BooleanField(default=False, verbose_name='Built-In Micro')),
                ('_property', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kitchen', to='leads.property')),
                ('granny_flat', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kitchen', to='leads.grannyflat')),
            ],
        ),
        migrations.AddField(
            model_name='grannyflat',
            name='_property',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='granny_flat', to='leads.property'),
        ),
        migrations.CreateModel(
            name='Features',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pool_present', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=20, verbose_name='Pool Present')),
                ('pool_material', models.CharField(choices=[('Concrete', 'Concrete'), ('Fibreglass', 'Fibreglass')], default='Concrete', max_length=100, verbose_name='Material')),
                ('pool_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=100, verbose_name='Condition')),
                ('registerd', models.CharField(choices=[('YES', 'YES'), ('NO', 'NO')], default='YES', max_length=5, verbose_name='Registered')),
                ('registeration_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Registration Number')),
                ('pool_comments', models.CharField(blank=True, max_length=300, null=True, verbose_name='Comments')),
                ('fencing_material', models.CharField(choices=[('Brick', 'Brick'), ('Colourbond', 'Colourbond'), ('Timber', 'Timber'), ('Post & Wire', 'Post & Wire'), ('None', 'None'), ('Other', 'Other')], default='Brick', max_length=100, verbose_name='Material')),
                ('fencing_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=100, verbose_name='Condition')),
                ('fencing_comments', models.CharField(blank=True, max_length=300, null=True, verbose_name='Comments')),
                ('deck_present', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=20, verbose_name='Deck Present')),
                ('deck_material', models.CharField(choices=[('Concrete', 'Concrete'), ('Timber', 'Timber'), ('Tiled', 'Tiled'), ('Other', 'Other')], default='Concrete', max_length=100, verbose_name='Material')),
                ('deck_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=100, verbose_name='Condition')),
                ('deck_comments', models.CharField(blank=True, max_length=300, null=True, verbose_name='Comments')),
                ('deck_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('deck_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('deck_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('retaining_walls_material', models.CharField(choices=[('None', 'None'), ('Blocks', 'Blocks'), ('Concrete', 'Concrete'), ('Sleepers', 'Sleepers'), ('Timber', 'Timber'), ('Treated Timber', 'Treated Timber')], default='Blocks', max_length=100, verbose_name='Retaining Walls')),
                ('retaining_walls_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=100, verbose_name='Condition')),
                ('retaining_walls_comments', models.CharField(blank=True, max_length=300, null=True, verbose_name='Comments')),
                ('_property', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='features', to='leads.property')),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Location Name')),
                ('floors', models.CharField(choices=[('None', 'None'), ('Carpet', 'Carpet'), ('Carpet-Pattern', 'Carpet-Pattern'), ('Carpet-Plain', 'Carpet-Plain'), ('Concrete', 'Concrete'), ('Cork', 'Cork'), ('Plastic', 'Plastic'), ('Plastic-Lino', 'Plastic-Lino'), ('Plastic-Vinyl', 'Plastic-Vinyl'), ('Stone', 'Stone'), ('Stone-Granite', 'Stone-Granite'), ('Stone-Limestone', 'Stone-Limestone'), ('Stone-Marble', 'Stone-Marble'), ('Stone-Sandstone', 'Stone-Sandstone'), ('Stone-Slate', 'Stone-Slate'), ('Stone-Travertine', 'Stone-Travertine'), ('Stone-Terrazzo', 'Stone-Terrazzo'), ('Tile', 'Tile'), ('Tile-Ceramic', 'Tile-Ceramic'), ('Tile-Mosaic', 'Tile-Mosaic'), ('Tile-Porcelain', 'Tile-Porcelain'), ('Tile-Wood', 'Tile-Wood'), ('Timber', 'Timber'), ('Timber-Floating Floor', 'Timber-Floating Floor'), ('Timber-Hardwood', 'Timber-Hardwood'), ('Timber-Polished', 'Timber-Polished')], default='Carpet', max_length=50, verbose_name='Floors')),
                ('floors_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=50, verbose_name='Condition')),
                ('floors_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('ceiling', models.CharField(choices=[('None', 'None'), ('Gyprock', 'Gyprock'), ('Fibre Cement', 'Fibre Cement'), ('Timber', 'Timber')], default='Gyprock', max_length=50, verbose_name='Ceiling')),
                ('ceiling_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=50, verbose_name='Condition')),
                ('ceiling_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('walls', models.CharField(choices=[('None', 'None'), ('Brick', 'Brick'), ('Brick-Glass', 'Brick-Glass'), ('Fibre Cement', 'Fibre Cement'), ('Gyprock', 'Gyprock'), ('Picture Rails', 'Picture Rails'), ('Render', 'Render'), ('Tiles', 'Tiles'), ('Timber', 'Timber'), ('Wall Paper', 'Wall Paper')], default='Brick', max_length=50, verbose_name='Walls')),
                ('walls_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=50, verbose_name='Condition')),
                ('walls_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('light_fittings', models.CharField(choices=[('None', 'None'), ('Halogens', 'Halogens'), ('Track', 'Track'), ('Down Light', 'Down Light'), ('Fluro', 'Fluro'), ('LED', 'LED')], default='Halogens', max_length=50, verbose_name='Light Fittings')),
                ('light_fittings_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('window_present', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=20, verbose_name='Window Present')),
                ('window_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('window_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('window_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('sliding_door_present', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=20, verbose_name='Sliding Door Present')),
                ('sliding_door_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('sliding_door_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('sliding_door_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('curtains_or_blinds', models.CharField(choices=[('None', 'None'), ('Blinds', 'Blinds'), ('Blinds-Aluminium', 'Blinds-Aluminium'), ('Blinds-Honeycomb', 'Blinds-Honeycomb'), ('Blinds-Mini', 'Blinds-Mini'), ('Blinds-Panel', 'Blinds-Panel'), ('Blinds-Pleated', 'Blinds-Pleated'), ('Blinds-Roller', 'Blinds-Roller'), ('Blinds-Sheer', 'Blinds-Sheer'), ('Blinds-Venetian', 'Blinds-Venetian'), ('Blinds-Vertical', 'Blinds-Vertical'), ('Curtains', 'Curtains'), ('Curtains-Box Pleated', 'Curtains-Box Pleated'), ('Curtains-Eyelet', 'Curtains-Eyelet'), ('Curtains-Goblet', 'Curtains-Goblet'), ('Curtains-Tailored Pleat', 'Curtains-Tailored Pleat')], default='Blinds', max_length=50, verbose_name='Curtains/Blinds')),
                ('curtains_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('_property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='leads.property')),
                ('granny_flat', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='entry', to='leads.grannyflat')),
            ],
        ),
        migrations.CreateModel(
            name='Dining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Location Name')),
                ('floors', models.CharField(choices=[('None', 'None'), ('Carpet', 'Carpet'), ('Carpet-Pattern', 'Carpet-Pattern'), ('Carpet-Plain', 'Carpet-Plain'), ('Concrete', 'Concrete'), ('Cork', 'Cork'), ('Plastic', 'Plastic'), ('Plastic-Lino', 'Plastic-Lino'), ('Plastic-Vinyl', 'Plastic-Vinyl'), ('Stone', 'Stone'), ('Stone-Granite', 'Stone-Granite'), ('Stone-Limestone', 'Stone-Limestone'), ('Stone-Marble', 'Stone-Marble'), ('Stone-Sandstone', 'Stone-Sandstone'), ('Stone-Slate', 'Stone-Slate'), ('Stone-Travertine', 'Stone-Travertine'), ('Stone-Terrazzo', 'Stone-Terrazzo'), ('Tile', 'Tile'), ('Tile-Ceramic', 'Tile-Ceramic'), ('Tile-Mosaic', 'Tile-Mosaic'), ('Tile-Porcelain', 'Tile-Porcelain'), ('Tile-Wood', 'Tile-Wood'), ('Timber', 'Timber'), ('Timber-Floating Floor', 'Timber-Floating Floor'), ('Timber-Hardwood', 'Timber-Hardwood'), ('Timber-Polished', 'Timber-Polished')], default='Carpet', max_length=50, verbose_name='Floors')),
                ('floors_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=50, verbose_name='Condition')),
                ('floors_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('ceiling', models.CharField(choices=[('None', 'None'), ('Gyprock', 'Gyprock'), ('Fibre Cement', 'Fibre Cement'), ('Timber', 'Timber')], default='Gyprock', max_length=50, verbose_name='Ceiling')),
                ('ceiling_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=50, verbose_name='Condition')),
                ('ceiling_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('walls', models.CharField(choices=[('None', 'None'), ('Brick', 'Brick'), ('Brick-Glass', 'Brick-Glass'), ('Fibre Cement', 'Fibre Cement'), ('Gyprock', 'Gyprock'), ('Picture Rails', 'Picture Rails'), ('Render', 'Render'), ('Tiles', 'Tiles'), ('Timber', 'Timber'), ('Wall Paper', 'Wall Paper')], default='Brick', max_length=50, verbose_name='Walls')),
                ('walls_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=50, verbose_name='Condition')),
                ('walls_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('light_fittings', models.CharField(choices=[('Halogens', 'Halogens'), ('Track', 'Track'), ('Down Light', 'Down Light'), ('Fluro', 'Fluro'), ('LED', 'LED')], default='Halogens', max_length=50, verbose_name='Light Fittings')),
                ('light_fittings_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('room_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('room_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('room_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('window_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('window_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('window_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('balcony_present', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=20, verbose_name='Balcony Present')),
                ('balcony_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('balcony_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('balcony_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('sliding_door_present', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=20, verbose_name='Sliding Door Present')),
                ('sliding_door_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('sliding_door_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('sliding_door_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('curtains_or_blinds', models.CharField(choices=[('None', 'None'), ('Blinds', 'Blinds'), ('Blinds-Aluminium', 'Blinds-Aluminium'), ('Blinds-Honeycomb', 'Blinds-Honeycomb'), ('Blinds-Mini', 'Blinds-Mini'), ('Blinds-Panel', 'Blinds-Panel'), ('Blinds-Pleated', 'Blinds-Pleated'), ('Blinds-Roller', 'Blinds-Roller'), ('Blinds-Sheer', 'Blinds-Sheer'), ('Blinds-Venetian', 'Blinds-Venetian'), ('Blinds-Vertical', 'Blinds-Vertical'), ('Curtains', 'Curtains'), ('Curtains-Box Pleated', 'Curtains-Box Pleated'), ('Curtains-Eyelet', 'Curtains-Eyelet'), ('Curtains-Goblet', 'Curtains-Goblet'), ('Curtains-Tailored Pleat', 'Curtains-Tailored Pleat')], default='Blinds', max_length=50, verbose_name='Curtains/Blinds')),
                ('curtains_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('air_conditioning_ducted', models.BooleanField(default=False, verbose_name='Air Conditioning-Ducted')),
                ('air_conditioning_wall_mounted', models.BooleanField(default=False, verbose_name='Air Conditioning-Wall Mounted')),
                ('ceiling_fan', models.BooleanField(default=False, verbose_name='Ceiling Fan')),
                ('ducted_vacuum', models.BooleanField(default=False, verbose_name='Ducted Vacuum')),
                ('exposed_timber_beams', models.BooleanField(default=False, verbose_name='Exposed Timber Beams')),
                ('fire_place_combustion', models.BooleanField(default=False, verbose_name='Fire Place - Combustion')),
                ('fire_place_gas', models.BooleanField(default=False, verbose_name='Fire Place - Gas')),
                ('intercom_system', models.BooleanField(default=False, verbose_name='Intercom System')),
                ('sky_light', models.BooleanField(default=False, verbose_name='Sky Light')),
                ('tv_outlet', models.BooleanField(default=False, verbose_name='TV Outlet')),
                ('wet_bar', models.BooleanField(default=False, verbose_name='Wet Bar')),
                ('_property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='leads.property')),
                ('granny_flat', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dining', to='leads.grannyflat')),
            ],
        ),
        migrations.CreateModel(
            name='Dealing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dealing_type', models.CharField(blank=True, choices=[('Caveat', 'Caveat'), ('Covenant', 'Covenant'), ('Easement', 'Easement'), ('Mortgage', 'Mortgage')], max_length=50, verbose_name='Dealing Type')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='leads.lead')),
            ],
        ),
        migrations.CreateModel(
            name='Construction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('levels', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3')], default='1', max_length=100, verbose_name='Levels')),
                ('building_area', models.IntegerField(blank=True, null=True, verbose_name='Building Area')),
                ('foundation_description', models.CharField(choices=[('Piers', 'Piers'), ('Pole', 'Pole'), ('Slab', 'Slab')], default='Piers', max_length=100, verbose_name='Foundation')),
                ('foundation_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=100, verbose_name='Condition')),
                ('foundation_comments', models.CharField(blank=True, max_length=300, null=True, verbose_name='Comments')),
                ('external_walls', models.CharField(choices=[('Blue board', 'Blue board'), ('Brick', 'Brick'), ('Cladding - Metal', 'Cladding - Metal'), ('Cladding - Stone', 'Cladding - Stone'), ('Cladding - Vinyl', 'Cladding - Vinyl'), ('Cladding - Wood', 'Cladding - Wood'), ('Colourbond', 'Colourbond'), ('Concrete', 'Concrete'), ('Concrete Blocks', 'Concrete Blocks'), ('Fibre Cement', 'Fibre Cement'), ('Hardiplank', 'Hardiplank'), ('Render', 'Render'), ('Rendered - Bagged', 'Rendered - Bagged'), ('Stone', 'Stone')], default='Blue board', max_length=100, verbose_name='External Walls')),
                ('external_walls_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=100, verbose_name='Condition')),
                ('external_walls_comments', models.CharField(blank=True, max_length=300, null=True, verbose_name='Comments')),
                ('roof_description', models.CharField(choices=[('Colourbond', 'Colourbond'), ('Cliplock', 'Cliplock'), ('Concrete Tile', 'Concrete Tile'), ('Decromastic', 'Decromastic'), ('Other', 'Other')], default='Blue board', max_length=100, verbose_name='Roof Description')),
                ('roof_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=100, verbose_name='Condition')),
                ('roof_comments', models.CharField(blank=True, max_length=300, null=True, verbose_name='Comments')),
                ('_property', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='construction', to='leads.property')),
            ],
        ),
        migrations.CreateModel(
            name='Bedroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Location Name')),
                ('floors', models.CharField(choices=[('None', 'None'), ('Carpet', 'Carpet'), ('Carpet-Pattern', 'Carpet-Pattern'), ('Carpet-Plain', 'Carpet-Plain'), ('Concrete', 'Concrete'), ('Cork', 'Cork'), ('Plastic', 'Plastic'), ('Plastic-Lino', 'Plastic-Lino'), ('Plastic-Vinyl', 'Plastic-Vinyl'), ('Stone', 'Stone'), ('Stone-Granite', 'Stone-Granite'), ('Stone-Limestone', 'Stone-Limestone'), ('Stone-Marble', 'Stone-Marble'), ('Stone-Sandstone', 'Stone-Sandstone'), ('Stone-Slate', 'Stone-Slate'), ('Stone-Travertine', 'Stone-Travertine'), ('Stone-Terrazzo', 'Stone-Terrazzo'), ('Tile', 'Tile'), ('Tile-Ceramic', 'Tile-Ceramic'), ('Tile-Mosaic', 'Tile-Mosaic'), ('Tile-Porcelain', 'Tile-Porcelain'), ('Tile-Wood', 'Tile-Wood'), ('Timber', 'Timber'), ('Timber-Floating Floor', 'Timber-Floating Floor'), ('Timber-Hardwood', 'Timber-Hardwood'), ('Timber-Polished', 'Timber-Polished')], default='Carpet', max_length=50, verbose_name='Floors')),
                ('floors_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=50, verbose_name='Condition')),
                ('floors_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('ceiling', models.CharField(choices=[('None', 'None'), ('Gyprock', 'Gyprock'), ('Fibre Cement', 'Fibre Cement'), ('Timber', 'Timber')], default='Gyprock', max_length=50, verbose_name='Ceiling')),
                ('ceiling_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=50, verbose_name='Condition')),
                ('ceiling_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('walls', models.CharField(choices=[('None', 'None'), ('Brick', 'Brick'), ('Brick-Glass', 'Brick-Glass'), ('Fibre Cement', 'Fibre Cement'), ('Gyprock', 'Gyprock'), ('Picture Rails', 'Picture Rails'), ('Render', 'Render'), ('Tiles', 'Tiles'), ('Timber', 'Timber'), ('Wall Paper', 'Wall Paper')], default='Brick', max_length=50, verbose_name='Walls')),
                ('walls_condition', models.CharField(choices=[('Excellent', 'Excellent'), ('Above Average', 'Above Average'), ('Average', 'Average'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], default='Excellent', max_length=50, verbose_name='Condition')),
                ('walls_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('light_fittings', models.CharField(choices=[('Halogens', 'Halogens'), ('Track', 'Track'), ('Down Light', 'Down Light'), ('Fluro', 'Fluro'), ('LED', 'LED')], default='Halogens', max_length=50, verbose_name='Light Fittings')),
                ('light_fittings_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('room_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('room_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('room_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('window_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('window_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('window_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('balcony_present', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=20, verbose_name='Balcony Present')),
                ('balcony_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('balcony_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('balcony_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('sliding_door_present', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=20, verbose_name='Sliding Door Present')),
                ('sliding_door_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('sliding_door_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('sliding_door_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('curtains_or_blinds', models.CharField(choices=[('None', 'None'), ('Blinds', 'Blinds'), ('Blinds-Aluminium', 'Blinds-Aluminium'), ('Blinds-Honeycomb', 'Blinds-Honeycomb'), ('Blinds-Mini', 'Blinds-Mini'), ('Blinds-Panel', 'Blinds-Panel'), ('Blinds-Pleated', 'Blinds-Pleated'), ('Blinds-Roller', 'Blinds-Roller'), ('Blinds-Sheer', 'Blinds-Sheer'), ('Blinds-Venetian', 'Blinds-Venetian'), ('Blinds-Vertical', 'Blinds-Vertical'), ('Curtains', 'Curtains'), ('Curtains-Box Pleated', 'Curtains-Box Pleated'), ('Curtains-Eyelet', 'Curtains-Eyelet'), ('Curtains-Goblet', 'Curtains-Goblet'), ('Curtains-Tailored Pleat', 'Curtains-Tailored Pleat')], default='Blinds', max_length=50, verbose_name='Curtains/Blinds')),
                ('curtains_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('air_conditioning_ducted', models.BooleanField(default=False, verbose_name='Air Conditioning-Ducted')),
                ('air_conditioning_wall_mounted', models.BooleanField(default=False, verbose_name='Air Conditioning-Wall Mounted')),
                ('ceiling_fan', models.BooleanField(default=False, verbose_name='Ceiling Fan')),
                ('ducted_vacuum', models.BooleanField(default=False, verbose_name='Ducted Vacuum')),
                ('ensuite', models.BooleanField(default=False, verbose_name='Ensuite')),
                ('tv_outlet', models.BooleanField(default=False, verbose_name='TV Outlet')),
                ('wardrobe_built_in', models.BooleanField(default=False, verbose_name='Wardrobe Built In')),
                ('wardrobe_walk_in', models.BooleanField(default=False, verbose_name='Wardrobe Walk In')),
                ('_property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='leads.property')),
                ('granny_flat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='leads.grannyflat')),
            ],
        ),
        migrations.CreateModel(
            name='Bathroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Location Name')),
                ('bath', models.CharField(choices=[('None', 'None'), ('Single', 'Single'), ('Spa', 'Spa'), ('Other', 'Other')], default='Single', max_length=50, verbose_name='Bath')),
                ('hand_basin', models.CharField(choices=[('None', 'None'), ('Upright Ceramic', 'Upright Ceramic'), ('Other', 'Other')], default='Upright Ceramic', max_length=50, verbose_name='Hand Basin')),
                ('shower', models.CharField(choices=[('None', 'None'), ('Over Bath', 'Over Bath'), ('Recess', 'Recess')], default='Over Bath', max_length=50, verbose_name='Shower')),
                ('toilet', models.CharField(choices=[('None', 'None'), ('Dual Flush', 'Dual Flush'), ('Single Flush', 'Single Flush')], default='Dual Flush', max_length=50, verbose_name='Toilet')),
                ('vanity', models.CharField(choices=[('None', 'None'), ('Single', 'Single'), ('Double', 'Double')], default='Single', max_length=50, verbose_name='Vanity')),
                ('bathroom_comments', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comments')),
                ('bathroom_length', models.IntegerField(blank=True, null=True, verbose_name='Length')),
                ('bathroom_width', models.IntegerField(blank=True, null=True, verbose_name='Width')),
                ('bathroom_height', models.IntegerField(blank=True, null=True, verbose_name='Height')),
                ('_property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='leads.property')),
                ('granny_flat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='leads.grannyflat')),
            ],
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mortgaged', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, verbose_name='Mortgaged')),
                ('bank', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bank')),
                ('reference', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reference')),
                ('legal_representative', models.CharField(blank=True, max_length=100, null=True, verbose_name='Legal Representative')),
                ('po_box', models.CharField(blank=True, max_length=100, null=True, verbose_name='PO Box')),
                ('postal_suburb', models.CharField(blank=True, max_length=100, null=True, verbose_name='Suburb')),
                ('postal_state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State')),
                ('postal_post_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Post Code')),
                ('unit', models.CharField(blank=True, max_length=100, null=True, verbose_name='Unit')),
                ('number', models.IntegerField(blank=True, null=True, verbose_name='Number')),
                ('street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Street')),
                ('suburb', models.CharField(blank=True, max_length=100, null=True, verbose_name='Suburb')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State')),
                ('post_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Post Code')),
                ('office_phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: 'XXXXXXXXXX' or '(XX) XXXXXXXXXX'. Up to 12 digits allowed.", regex='^[(\\d) ]{10,15}$')], verbose_name='Office Phone')),
                ('office_fax', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: 'XXXXXXXXXX' or '(XX) XXXXXXXXXX'. Up to 12 digits allowed.", regex='^[(\\d) ]{10,15}$')], verbose_name='Office Fax')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('mortgage_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Mortgage Number')),
                ('original_amount', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,.]*$')], verbose_name='Original Loan Amount')),
                ('current_amount', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,.]*$')], verbose_name='Current Loan Amount')),
                ('arrears', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,.]*$')], verbose_name='Arrears Amount')),
                ('interest', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Interest')),
                ('duration_in_years', models.IntegerField(blank=True, null=True, verbose_name='Duration (Years)')),
                ('repayments', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,.]*$')], verbose_name='Repayments')),
                ('_property', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bank', to='leads.property')),
            ],
        ),
        migrations.CreateModel(
            name='Auction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Time')),
                ('location', models.CharField(blank=True, max_length=50, null=True, verbose_name='Location')),
                ('deposit_required', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,]*$')], verbose_name='Deposit Required')),
                ('days', models.IntegerField(blank=True, null=True, verbose_name='Days (Balance Due After)')),
                ('_property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='property_auction', to='leads.property')),
            ],
        ),
    ]
