# Generated by Django 3.2.7 on 2021-12-02 09:54

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('leads', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_solicitor', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=50, null=True, verbose_name='Is There A Solicitor')),
                ('category', models.CharField(blank=True, max_length=100, null=True, verbose_name='Category')),
                ('sub_category', models.CharField(blank=True, max_length=100, null=True, verbose_name='Sub Category')),
                ('company', models.CharField(blank=True, max_length=100, null=True, verbose_name='Company')),
                ('abn_or_acn', models.CharField(blank=True, choices=[('', '---------'), ('ABN', 'ABN'), ('ACN', 'ACN')], default='ABN', max_length=15, null=True, verbose_name='ABN/ACN')),
                ('abn_or_acn_number', models.IntegerField(blank=True, null=True, verbose_name='ABN/ACN Number')),
                ('contact_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Contact Name')),
                ('po_box', models.CharField(blank=True, max_length=100, null=True, verbose_name='PO Box')),
                ('postal_suburb', models.CharField(blank=True, max_length=100, null=True, verbose_name='Suburb')),
                ('postal_state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State')),
                ('postal_post_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Post Code')),
                ('unit', models.CharField(blank=True, max_length=100, null=True, verbose_name='Unit')),
                ('number', models.IntegerField(blank=True, null=True, verbose_name='Number')),
                ('street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Street')),
                ('suburb', models.CharField(blank=True, max_length=100, null=True, verbose_name='Suburb')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State')),
                ('post_code', models.CharField(blank=True, max_length=100, null=True, verbose_name='Post Code')),
                ('mobile', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Mobile number must be entered in the format: 'XXXXXXXXXX' or '(XX) XXXXXXXXXX'. Up to 12 digits allowed.", regex='^[(\\d) ]{10,15}$')])),
                ('office_phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: 'XXXXXXXXXX' or '(XX) XXXXXXXXXX'. Up to 12 digits allowed.", regex='^[(\\d) ]{10,15}$')], verbose_name='Office Phone')),
                ('office_fax', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: 'XXXXXXXXXX' or '(XX) XXXXXXXXXX'. Up to 12 digits allowed.", regex='^[(\\d) ]{10,15}$')], verbose_name='Office Fax')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('contact_type', models.CharField(blank=True, choices=[('', '-----------'), ('Branch', 'Branch'), ('Head Office', 'Head Office')], default='', max_length=100, null=True, verbose_name='Type')),
                ('rate_per_hour', models.CharField(blank=True, max_length=50, null=True, verbose_name='Rate/hour')),
                ('trade_rating', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter rating in the format 10/10.', regex='^[\\d\\/]*$')], verbose_name='Trade Rating')),
                ('listed_price', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,.]*$')], verbose_name='Listed Price')),
                ('reference', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reference')),
                ('executor_type', models.CharField(blank=True, choices=[('No Executor', 'No Executor'), ('Lawyer', 'Lawyer'), ('Relative', 'Relative')], default='No Executor', max_length=20, null=True, verbose_name='Executor')),
                ('website', models.CharField(blank=True, max_length=50, null=True, verbose_name='Website')),
                ('position', models.CharField(blank=True, max_length=50, null=True, verbose_name='Position')),
                ('license_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='License Number')),
                ('insurance_cover_amount', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,.]*$')], verbose_name='Insurance Cover Amount')),
                ('insurance_expiry', models.DateField(blank=True, null=True, verbose_name='Insurance Expiry')),
                ('industry_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Industry Type')),
                ('investment_amount', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,.]*$')], verbose_name='Investment Amount')),
                ('agreed_interest_rate_per_annum', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Agreed Interest Rate (PA)')),
                ('duration_in_months', models.IntegerField(blank=True, null=True, verbose_name='Duration (Months)')),
                ('roi_approx', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,.]*$')], verbose_name='ROI (Approx.)')),
                ('total_approx', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,.]*$')], verbose_name='Total (Approx.)')),
                ('payment_type', models.CharField(blank=True, choices=[('Profit Split', 'Profit Split'), ('Interest ROI', 'Interest ROI')], default='Interest ROI', max_length=50, null=True, verbose_name='Payment type')),
                ('profit_split', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Profit Split (%)')),
                ('is_agent', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=50, null=True, verbose_name='Is There An Agent')),
                ('_property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='leads.property')),
            ],
        ),
        migrations.CreateModel(
            name='PropertiesInspected',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address')),
                ('inspection_costs', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,]*$')], verbose_name='Inspection Costs')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contacts.contact')),
            ],
        ),
        migrations.CreateModel(
            name='PropertiesEmployed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address')),
                ('quote', models.IntegerField(blank=True, null=True, verbose_name='Quote')),
                ('total', models.CharField(blank=True, max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Enter whole numbers.', regex='^[\\d\\,]*$')], verbose_name='Total')),
                ('contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contacts.contact')),
            ],
        ),
    ]
